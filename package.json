{
	"name": "rpw65",
	"displayName": "RPW 65",
	"description": "Multi-syntax language extension for 6502 and 65816 assembly, in Merlin, dasm, ACME, ca65, 64tass, ORCA/M (APW), and LISA 2.5 syntaxes",
	"author": "Sean Callahan",
	"publisher": "seanahan5000",
	"license": "MIT",
	"version": "2.0.0",
	"repository": {
		"type": "git",
		"url": "https://github.com/seanahan5000/rpw-ext.git"
	},
	"categories": [
		"Programming Languages",
		"Debuggers"
	],
	"keywords": [
		"6502",
		"65C02",
		"65EL02",
		"65816",
		"assembly",
		"assembler",
		"merlin",
		"dasm",
		"ca65",
		"acme",
		"lisa",
		"64tass",
		"orca/m",
		"apw",
		"retro",
		"debugger"
	],
	"engines": {
		"vscode": "^1.75.0"
	},
	"icon": "rpw65-icon.png",
	"main": "./client/out/extension",
	"activationEvents": [
		"onDebug:rpw65",
		"onDebugResolve:rpw65",
		"onDebugDynamicConfigurations:rpw65"
	],
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "RPW65",
			"properties": {
				"rpw65.syntax": {
					"type": "string",
					"enum": [
						"merlin",
						"dasm",
						"acme",
						"ca65",
						"lisa",
						"64tass",
						"orca/m"
					],
					"markdownDescription": "Assembler syntax to apply to source files.  A mode is inferred from keywords if none is chosen."
				},
				"rpw65.showErrors": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Highlight syntax errors."
				},
				"rpw65.showWarnings": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Highlight syntax warnings."
				},
				"rpw65.showCodeBytes": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Show assembled code bytes next to source."
				},
				"rpw65.showCycleCounts": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Show instruction cycle counts next to source."
				},
				"rpw65.columns.enable": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Enable variable width tab columns."
				},
				"rpw65.columns.c1": {
					"type": "number",
					"default": 16,
					"minimum": 1,
					"markdownDescription": "Width of the label column to use in tabbing and formatting."
				},
				"rpw65.columns.c2": {
					"type": "number",
					"default": 4,
					"minimum": 1,
					"markdownDescription": "Width of the opcode column to use in tabbing and formatting."
				},
				"rpw65.columns.c3": {
					"type": "number",
					"default": 20,
					"minimum": 1,
					"markdownDescription": "Width of the arguments column to use in tabbing and formatting."
				},
				"rpw65.case.lowerCaseCompletions": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Use lowercase in auto-complete suggestions."
				}
			}
		},
		"languages": [
			{
				"id": "rpw65",
				"extensions": [
					".s",
					".i",
					".inc",
					".a",
					".asm",
					".l"
				],
				"configuration": "./language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "rpw65",
				"scopeName": "source.rpw65",
				"path": "./syntaxes/rpw65.tmLanguage.json"
			}
		],
		"menus": {
			"editor/context": [
				{
					"when": "resourceLangId == rpw65",
					"command": "rpw65.renumberLocals",
					"group": "1_modification"
				}
			]
		},
		"commands": [
			{
				"command": "rpw65.renumberLocals",
				"title": "Renumber Locals"
			},
			{
				"command": "rpw65.tabIndent",
				"title": "Tab Indentation"
			},
			{
				"command": "rpw65.tabOutdent",
				"title": "Shift-Tab Indentation"
			},
			{
				"command": "rpw65.delIndent",
				"title": "Delete Indentation"
			},
			{
				"command": "rpw65.leftArrowIndent",
				"title": "Left Arrow Indentation"
			},
			{
				"command": "rpw65.rightArrowIndent",
				"title": "Right Arrow Indentation"
			}
		],
		"keybindings": [
			{
				"command": "rpw65.tabIndent",
				"key": "tab",
				"when": "resourceLangId == rpw65 && config.rpw65.columns.enable && editorTextFocus && !inlineSuggestionVisible && !suggestWidgetVisible && !inSnippetMode"
			},
			{
				"command": "rpw65.tabOutdent",
				"key": "shift-tab",
				"when": "resourceLangId == rpw65 && config.rpw65.columns.enable && editorTextFocus && !inlineSuggestionVisible && !suggestWidgetVisible && !inSnippetMode"
			},
			{
				"command": "rpw65.delIndent",
				"key": "backspace",
				"when": "resourceLangId == rpw65 && config.rpw65.columns.enable && editorTextFocus"
			},
			{
				"command": "rpw65.leftArrowIndent",
				"key": "left",
				"when": "resourceLangId == rpw65 && config.rpw65.columns.enable && editorTextFocus"
			},
			{
				"command": "rpw65.rightArrowIndent",
				"key": "right",
				"when": "resourceLangId == rpw65 && config.rpw65.columns.enable && editorTextFocus"
			}
		],
		"semanticTokenScopes": [
			{
				"scopes": {
					"comment": [
						"comment"
					],
					"string": [
						"string"
					],
					"escape": [
						"constant.character.escape"
					],
					"opcode": [
						"keyword"
					],
					"constant": [
						"keyword.control"
					],
					"zpage": [
						"entity.name.variable"
					],
					"label": [
						"entity.name.function"
					],
					"label.local": [
						"entity.other.attribute"
					],
					"function": [
						"entity.name.function"
					],
					"function.external": [
						"meta.embedded.assembly"
					],
					"type": [
						"entity.name.type"
					],
					"macro": [
						"entity.name.type"
					],
					"buffer": [
						"variable.other.constant"
					],
					"keyword": [
						"keyword.control"
					],
					"operator": [
						"keyword.other"
					],
					"number": [
						"constant.numeric"
					],
					"var": [
						"support.variable"
					],
					"invalid": [
						"invalid"
					]
				}
			}
		],
		"breakpoints": [
			{
				"language": "rpw65"
			}
		],
		"debuggers": [
			{
				"type": "rpw65",
				"languages": [
					"rpw65"
				],
				"label": "RPW Debug",
				"runtime": "node",
				"configurationAttributes": {
					"launch": {
						"properties": {
							"program": {
								"type": "string",
								"description": "Absolute path to a text file.",
								"default": "${workspaceFolder}/${command:AskForProgramName}"
							},
							"stopOnEntry": {
								"type": "boolean",
								"description": "Automatically stop after launch.",
								"default": true
							},
							"trace": {
								"type": "boolean",
								"description": "Enable logging of the Debug Adapter Protocol.",
								"default": true
							},
							"compileError": {
								"type": "string",
								"description": "Simulates a compile error in 'launch' request.",
								"enum": [
									"default",
									"show",
									"hide"
								],
								"enumDescriptions": [
									"default: show fake compile error to user",
									"show fake compile error to user",
									"do not show fake compile error to user"
								]
							}
						}
					}
				},
				"initialConfigurations": [
					{
						"type": "rpw65",
						"request": "launch",
						"name": "Launch RPW Debugger",
						"stopOnEntry": true
					},
					{
						"type": "rpw65",
						"request": "attach",
						"name": "Attach RPW Debugger",
						"stopOnEntry": true
					}
				]
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run esbuild-client -- --minify && npm run esbuild-server -- --minify",
		"esbuild-client": "esbuild ./client/src/extension.ts --bundle --outfile=client/out/extension.js --external:vscode --format=cjs --platform=node",
		"esbuild-server": "esbuild ./server/src/server.ts --bundle --outfile=server/out/server.js --external:vscode --format=cjs --platform=node",
		"esbuild-base": "npm run esbuild-client -- --sourcemap && npm run esbuild-server -- --sourcemap",
		"build": "npm run esbuild-base -- --sourcemap",
		"esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
		"test-compile": "tsc -p ./",
		"compile": "tsc -b",
		"watch": "tsc -b -w",
		"postinstall": "cd client && npm install && cd ../server && npm install && cd .."
	},
	"devDependencies": {
		"@types/node": "^16.18.34",
		"@types/ws": "^8.5.13",
		"base64-js": "^1.5.1",
		"esbuild": "^0.25.2",
		"typescript": "^5.1.3"
	},
	"dependencies": {
		"fs-extra": "^11.1.1",
		"ws": "^8.18.0"
	}
}
